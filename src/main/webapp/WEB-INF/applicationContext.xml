<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <!-- Activates various annotations to be detected in bean classes -->
    <context:annotation-config xmlns:context="http://www.springframework.org/schema/context"/>

    <!-- Scans the classpath for annotated components that will be auto-registered as Spring beans.
     For example @Controller and @Service. Make sure to set the correct base-package-->
    <context:component-scan base-package="ua.com.otpbank" />

    <!-- Configures the annotation-driven Spring MVC Controller programming model.
    Note that, with Spring 3.0, this tag works in Servlet MVC only!  -->
    <mvc:annotation-driven />

    <mvc:resources mapping="/resources/**" location="/resources/" />

    <!-- Load Hibernate related configuration -->
    <import resource="hibernate-context.xml" />

    <bean id="listGenerator"  class="ua.com.otpbank.service.Generator">
        <property name="coffeeLovers">
            <list>
                <value>Ira</value>
                <value>Geri</value>
                <value>Igor</value>
                <value>Pasha</value>
                <value>Misha</value>
            </list>
        </property>
        <!--Inject random method-->
        <!--choose random method:
        "simple-shuffle" - simplest method, used shuffle list one time and return result;
        "random-based-shuffle" - shuffle list x (depends on random integer from 0 to 100) times and return result;
        !method under construction
        "statistics-based-shuffle" - shuffle list, then check first participant, if participant quantity is max()
        then participant transfer to the end of list;-->
        <property name="generatorMethod" value="statistics-based-shuffle"/>
    </bean>


</beans>